{"ast":null,"code":"var _jsxFileName = \"/Users/dani/dev/javascript/hmm-frontend/src/Landing/Landing.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport Paperbase from '../Dashboard/Paperbase';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appbar: {\n    backgroundColor: '#ED1C16'\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nconst rootStyle = {};\nexport default class Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      session: {\n        AccountID: null,\n        LastActivityTime: \"\"\n      }\n    };\n  }\n\n  checkLoggedIn() {\n    const {\n      email,\n      password,\n      session\n    } = this.state;\n    axios.post(\"http://localhost:3001/v1/sessions\", {\n      email: email,\n      password: password\n    }, {\n      withCredentials: true\n    }).then(response => {\n      if (response.status === 200) {\n        console.log(\"Yes\");\n      }\n    }).catch(error => {\n      console.log(\"login error\", error);\n    }); // event.preventDefault();\n  } // useEffect(() => {\n  //     const getSession = async () => {\n  //         const { response } = await axios.get(`http://localhost:3001/v1/sessions`, { withCredentials: true })\n  //         console.log(response);\n  //         console.log('here');\n  //         if (response.status === 200) {\n  //             console.log('Yes');\n  //         } else if (response.status === 401) {\n  //             console.log('Nope');\n  //         }\n  //         setSession(response)\n  //         setLoading(false)\n  //     }\n  //     getSession()\n  // }, [])\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      className: classes.appbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Hmm\"), loading ? /*#__PURE__*/React.createElement(Button, {\n      component: Link,\n      to: '/login',\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, \"Login\") : /*#__PURE__*/React.createElement(Button, {\n      component: Link,\n      to: '/dashboard',\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"dashboard\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dani/dev/javascript/hmm-frontend/src/Landing/Landing.js"],"names":["React","Component","makeStyles","AppBar","Toolbar","Typography","Button","Link","axios","Paperbase","useStyles","theme","root","flexGrow","appbar","backgroundColor","title","rootStyle","Landing","constructor","props","state","email","password","session","AccountID","LastActivityTime","checkLoggedIn","post","withCredentials","then","response","status","console","log","catch","error","render","classes","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport Paperbase from '../Dashboard/Paperbase';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    appbar: {\n        backgroundColor: '#ED1C16',\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst rootStyle = {\n    \n}\n\nexport default class Landing extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            session: {\n                AccountID: null,\n                LastActivityTime: \"\",\n            },\n        };\n    }\n\n    checkLoggedIn() {\n        const { email, password, session } = this.state;\n\n        axios.post(\n            \"http://localhost:3001/v1/sessions\",\n            {\n                email: email,\n                password: password,\n            },\n            { withCredentials: true }\n        ).then(response => {\n            if (response.status === 200) {\n                console.log(\"Yes\");\n            }\n        }).catch(error => {\n            console.log(\"login error\", error);\n        });\n        // event.preventDefault();\n    }\n\n    // useEffect(() => {\n    //     const getSession = async () => {\n    //         const { response } = await axios.get(`http://localhost:3001/v1/sessions`, { withCredentials: true })\n    //         console.log(response);\n    //         console.log('here');\n\n    //         if (response.status === 200) {\n    //             console.log('Yes');\n    //         } else if (response.status === 401) {\n    //             console.log('Nope');\n    //         }\n    //         setSession(response)\n    //         setLoading(false)\n    //     }\n    //     getSession()\n    // }, [])\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar position=\"static\" className={classes.appbar}>\n                        <Toolbar>\n                            <Typography variant=\"h6\" className={classes.title}>Hmm</Typography>\n                            {\n                                loading ?\n                                    <Button component={Link} to={'/login'} color=\"inherit\">Login</Button> :\n                                    <Button component={Link} to={'/dashboard'} color=\"inherit\">dashboard</Button>\n                            }\n\n                        </Toolbar>\n                    </AppBar>\n                </div>\n            </React.Fragment >\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}