version: "3.8"
services:
  postgres:
    container_name: postgres
    image: postgres:15.0-alpine 
    restart: always
    user: postgres
    #environment:
      #POSTGRES_USER: user-development
      #POSTGRES_HOST_AUTH_METHOD: trust
      #POSTGRES_DB: hmm-development
      #POSTGRES_PASSWORD: password
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    expose:
      - 5432

  backend:
    container_name: backend
    restart: "no"
    build:
      context: .
      dockerfile: cmd/backend/Dockerfile
      target: prod
    environment:
      STRUCTURED_LOGGING: "false"
      PORT: 1100
      LOGS_FORMAT: console
      PGHOST: database
      PGNAME: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - database
    ports:
      - 1100:1100
    expose:
      - 1100

volumes:
  postgres_volume:
